#!@perl@ 

## Given a taxonId, print a comma-separated list of taxonIds for the tree
## rooted by the given taxon

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;
use GUS::ObjRelP::DbiDatabase;
use GUS::Supported::GusConfig;

my ($verbose,$ncbiTaxId,$outputFile,$gusConfigFile);
&GetOptions("verbose!"=> \$verbose,
            "ncbiTaxId=s" => \$ncbiTaxId,
	    "outputFile=s" => \$outputFile,
            "gusConfigFile=s" => \$gusConfigFile);

my $usage = "usage: getSubTaxa --ncbiTaxId --outputFile --verbose " .
             "--gusConfigFile [\$GUS_CONFIG_FILE]\n";
die $usage unless $ncbiTaxId && $outputFile;

print STDERR "Establishing dbi login\n" if $verbose;

my $gusconfig = GUS::Supported::GusConfig->new($gusConfigFile);

my $db = GUS::ObjRelP::DbiDatabase->
  new($gusconfig->getDbiDsn(),
      $gusconfig->getReadOnlyDatabaseLogin(),
      $gusconfig->getReadOnlyDatabasePassword(),
      $verbose,0,1,
      $gusconfig->getCoreSchemaName());

my $dbh = $db->getQueryHandle();

my $sql = <<SQL;
  select taxon_id
  from SRes.Taxon
  where ncbi_tax_id in ($ncbiTaxId)
SQL

print STDERR "Query: $sql\n" if $verbose;

my $stmt = $dbh->prepareAndExecute($sql);

my @taxon;
while(my($currentTaxon) = $stmt->fetchrow_array()){
  push(@taxon, $currentTaxon);
}

my $taxon_ids = join(',', @taxon);

$stmt->finish();

$sql = <<SQL;
  WITH RECURSIVE cte AS (
    SELECT
      taxon_id
      , parent_id
    FROM Sres.Taxon
    WHERE taxon_id IN ($taxon_ids)
    UNION
    SELECT dtl.taxon_id, cte.taxon_id parent_id
    FROM Sres.taxon dtl, cte
    WHERE cte.taxon_id = dtl.parent_id
  )
  SELECT taxon_id
  FROM cte
SQL

print STDERR "Query: $sql\n" if $verbose;

$stmt = $dbh->prepareAndExecute($sql);

my @taxa;
while(my($currentTaxon) = $stmt->fetchrow_array()){
  push(@taxa, $currentTaxon);
}

$stmt->finish();

open (FILE, ">$outputFile") or die "Can't open $outputFile for writing\n";

print FILE join(',', @taxa), "\n";

$db->logout();
